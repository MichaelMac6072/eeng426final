/* variable declarations */
vars {
  int<1> turn;
  //int<1> a;
  int<1> a_x;
  int<1> a_o;
  //int<1> b;
  int<1> b_x;
  int<1> b_o;
  //int<1> c;
  int<1> c_x;
  int<1> c_o;
  //int<1> d;
  int<1> d_x;
  int<1> d_o;
  //int<1> e;
  int<1> e_x;
  int<1> e_o;
  //int<1> f;
  int<1> f_x;
  int<1> f_o;
  //int<1> g;
  int<1> g_x;
  int<1> g_o;
  //int<1> h;
  int<1> h_x;
  int<1> h_o
  //int<1> i;
  int<1> i_x;
  int<1> i_o;

  int<1> a_reset;
  int<1> b_reset;
  int<1> c_reset;
  int<1> d_reset;
  int<1> e_reset;
  int<1> f_reset;
  int<1> g_reset;
  int<1> h_reset;
  int<1> i_reset;


  int<1> draw;
  int<1> x_win;
  int<1> o_win;

  chan<1> A;
  chan<1> B;
  chan<1> C;
  chan<1> D;
  chan<1> E;
  chan<1> F;
  chan<1> G;
  chan<1> H;
  chan<1> I;
  chan<1> RESET;
  chan<2> WIN;
}

/* chp program */
chp {
*[
	
	// Player moves
	[ (#A & ~(a_x | a_o) -> a:=1, [turn = 0 -> a_x := 1 [] else a_o := 1]; turn := ~turn
	[] (#B & ~b) -> b:=1, [turn = 0 -> b_x := 1 [] else b_o := 1]; turn := ~turn
	[] (#C & ~c) -> c:=1, [turn = 0 -> c_x := 1 [] else c_o := 1]; turn := ~turn
	[] (#D & ~d) -> d:=1, [turn = 0 -> d_x := 1 [] else d_o := 1]; turn := ~turn
	[] (#E & ~e) -> e:=1, [turn = 0 -> e_x := 1 [] else e_o := 1]; turn := ~turn
	[] (#F & ~f) -> f:=1, [turn = 0 -> f_x := 1 [] else f_o := 1]; turn := ~turn
	[] (#G & ~g) -> g:=1, [turn = 0 -> g_x := 1 [] else g_o := 1]; turn := ~turn
	[] (#H & ~h) -> h:=1, [turn = 0 -> h_x := 1 [] else h_o := 1]; turn := ~turn
	[] (#I & ~i) -> i:=1, [turn = 0 -> i_x := 1 [] else i_o := 1]; turn := ~turn
	[] #RESET -> a_reset := 1, b_reset := 1, c_reset := 1, d_reset := 1, e_reset := 1, f_reset := 1, g_reset := 1, h_reset := 1, i:reset := 1, turn := 0, draw := 0, x_win := 0, o_win := 0 
	];

	//Buffered reset of squares

	[a_reset = 1 -> (a := 0, a_x := 0, a_0 := 0); a_reset := 0 [] else -> skip],	
	[b_reset = 1 -> (b := 0, b_x := 0, b_0 := 0); a_reset := 0 [] else -> skip],
	[c_reset = 1 -> (c := 0, c_x := 0, c_0 := 0); a_reset := 0 [] else -> skip],	
	[d_reset = 1 -> (d := 0, d_x := 0, d_0 := 0); a_reset := 0 [] else -> skip],
	[e_reset = 1 -> (e := 0, e_x := 0, e_0 := 0); a_reset := 0 [] else -> skip],
	[f_reset = 1 -> (f := 0, f_x := 0, f_0 := 0); a_reset := 0 [] else -> skip],
	[g_reset = 1 -> (g := 0, g_x := 0, g_0 := 0); a_reset := 0 [] else -> skip],
	[h_reset = 1 -> (h := 0, h_x := 0, h_0 := 0); a_reset := 0 [] else -> skip],
	[i_reset = 1 -> (i := 0, i_x := 0, i_0 := 0); a_reset := 0 [] else -> skip]

	//Win conditions

	[
	
	// Draw
	
]
}
